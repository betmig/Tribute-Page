<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="230.15717"
   height="322.57465"
   viewBox="0 0 230.15717 322.57465"
   version="1.1"
   id="svg219"
   sodipodi:docname="other.svg"
   inkscape:version="1.1.1 (c3084ef, 2021-09-22)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview221"
     pagecolor="#505050"
     bordercolor="#ffffff"
     borderopacity="1"
     inkscape:pageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="1"
     showgrid="false"
     showguides="true"
     inkscape:guide-bbox="true"
     inkscape:zoom="2.7654347"
     inkscape:cx="134.33693"
     inkscape:cy="270.12029"
     inkscape:window-width="1296"
     inkscape:window-height="758"
     inkscape:window-x="0"
     inkscape:window-y="25"
     inkscape:window-maximized="0"
     inkscape:current-layer="svg219">
    <sodipodi:guide
       position="38.621887,140.50002"
       orientation="0,-1"
       id="guide223" />
    <sodipodi:guide
       position="53.248754,32.88808"
       orientation="0,-1"
       id="guide225" />
    <sodipodi:guide
       position="113.84577,93.485096"
       orientation="1,0"
       id="guide227" />
    <sodipodi:guide
       position="115.82116,50.232317"
       orientation="0,-1"
       id="guide3805" />
  </sodipodi:namedview>
  <desc
     id="desc128">Created with getavataaars.com</desc>
  <defs
     id="defs133">
    <linearGradient
       id="linearGradient5889"
       inkscape:swatch="solid">
      <stop
         style="stop-color:#f28482;stop-opacity:1;"
         offset="0"
         id="stop5887" />
    </linearGradient>
    <linearGradient
       inkscape:collect="always"
       id="linearGradient3306">
      <stop
         style="stop-color:#f5cac3;stop-opacity:1;"
         offset="0"
         id="stop3302" />
      <stop
         style="stop-color:#f5cac3;stop-opacity:0;"
         offset="1"
         id="stop3304" />
    </linearGradient>
    <circle
       id="react-path-1"
       cx="120"
       cy="120"
       r="120" />
    <path
       d="m 12,160 c 0,66.27417 53.72583,120 120,120 66.27417,0 120,-53.72583 120,-120 h 12 V 0 H 0 v 160 z"
       id="react-path-2" />
    <path
       d="M 124,144.61095 V 163 h 4 v 0 c 39.7645,0 72,32.2355 72,72 v 9 H 0 v -9 c 0,-39.7645 32.235498,-72 72,-72 v 0 h 4 V 144.61095 C 58.762634,136.42237 46.372225,119.68701 44.305139,99.881238 38.480311,99.057787 34,94.05211 34,88 V 74 C 34,68.054007 38.324573,63.118073 44,62.165917 V 56 56 C 44,25.072054 69.072054,0 100,0 v 0 0 c 30.92795,0 56,25.072054 56,56 v 6.165917 c 5.67543,0.952156 10,5.88809 10,11.834083 v 14 c 0,6.05211 -4.48031,11.057787 -10.30514,11.881238 C 153.62778,119.68701 141.23736,136.42237 124,144.61095 Z"
       id="react-path-3" />
    <radialGradient
       inkscape:collect="always"
       xlink:href="#linearGradient3306"
       id="radialGradient3310"
       cx="114.40298"
       cy="267.34329"
       fx="114.40298"
       fy="267.34329"
       r="25.835821"
       gradientTransform="matrix(2.3529873,0,0,2.2406652,-155.04695,-334.29546)"
       gradientUnits="userSpaceOnUse" />
    <meshgradient
       inkscape:collect="always"
       id="meshgradient5917"
       gradientUnits="userSpaceOnUse"
       x="71.987695"
       y="224.69332">
      <meshrow
         id="meshrow5919">
        <meshpatch
           id="meshpatch5921">
          <stop
             path="c 23.2811,-22.1124  61.0271,-22.1124  84.3081,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop5923" />
          <stop
             path="c 23.2811,22.1124  23.2811,57.9637  0,80.0761"
             style="stop-color:#f5cac3;stop-opacity:1"
             id="stop5925" />
          <stop
             path="c -23.2811,22.1124  -61.0271,22.1124  -84.3081,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop5927" />
          <stop
             path="c -23.2811,-22.1124  -23.2811,-57.9637  0,-80.0761"
             style="stop-color:#f5cac3;stop-opacity:1"
             id="stop5929" />
        </meshpatch>
      </meshrow>
    </meshgradient>
  </defs>
  <g
     id="g217"
     stroke="none"
     stroke-width="1"
     fill="none"
     fill-rule="evenodd"
     transform="translate(-17.273635,-18)">
    <g
       transform="translate(-825,-1100)"
       id="Avataaar/Circle">
      <g
         transform="translate(825,1100)"
         id="g214">
        <g
           id="Mask" />
        <g
           id="Avataaar"
           stroke-width="1"
           fill-rule="evenodd"
           mask="url(#react-mask-5)">
          <g
             id="Body"
             transform="translate(32,36)">
            <mask
               id="react-mask-6"
               fill="#ffffff">
              <use
                 xlink:href="#react-path-3"
                 id="use136"
                 x="0"
                 y="0"
                 width="100%"
                 height="100%" />
            </mask>
            <use
               fill="#d0c6ac"
               xlink:href="#react-path-3"
               id="use139"
               x="0"
               y="0"
               width="100%"
               height="100%" />
            <g
               id="Skin/👶🏽-03-Brown"
               mask="url(#react-mask-6)"
               fill="#edb98a">
              <g
                 id="Color">
                <rect
                   x="0"
                   y="0"
                   width="264"
                   height="280"
                   id="rect141" />
              </g>
            </g>
            <path
               d="m 156,79 v 23 c 0,30.92795 -25.07205,56 -56,56 -30.927946,0 -56,-25.07205 -56,-56 V 79 94 c 0,30.92795 25.072054,56 56,56 30.92795,0 56,-25.07205 56,-56 z"
               id="Neck-Shadow"
               fill-opacity="0.1"
               fill="#000000"
               mask="url(#react-mask-6)" />
          </g>
          <g
             id="Clothing/Collar-+-Sweater"
             transform="translate(0,170)">
            <defs
               id="defs148">
              <path
                 d="M 105.1924,29.051724 H 104 v 0 c -39.764502,0 -72,32.235497 -72,71.999996 V 110 h 200 v -8.94828 C 232,61.287221 199.7645,29.051724 160,29.051724 v 0 h -1.1924 c 0.12704,0.98359 0.1924,1.984727 0.1924,3 0,13.807118 -12.08831,25 -27,25 -14.91169,0 -27,-11.192882 -27,-25 0,-1.015273 0.0654,-2.01641 0.1924,-3 z"
                 id="react-path-57" />
            </defs>
            <mask
               id="react-mask-58"
               fill="#ffffff">
              <use
                 xlink:href="#react-path-57"
                 id="use150"
                 x="0"
                 y="0"
                 width="100%"
                 height="100%" />
            </mask>
            <use
               id="Clothes"
               fill="#e6e6e6"
               fill-rule="evenodd"
               xlink:href="#react-path-57"
               x="0"
               y="0"
               width="100%"
               height="100%" />
            <g
               id="Color/Palette/Gray-01"
               mask="url(#react-mask-58)"
               fill-rule="evenodd"
               fill="#e6e6e6">
              <rect
                 id="🖍Color"
                 x="0"
                 y="0"
                 width="264"
                 height="110" />
            </g>
            <path
               d="m 156,22.279491 c 6.18165,4.555695 10,10.826236 10,17.748424 0,7.205579 -4.1374,13.705062 -10.771,18.299252 L 149.57933,53.876493 145,54.207887 l 1,-3.151105 -0.0778,-0.06127 C 152.02249,47.853051 156,42.700358 156,36.87681 Z m -48,-0.707992 c -6.76725,4.602509 -11,11.168278 -11,18.456416 0,7.39824 4.3616,14.05212 11.30843,18.663657 l 6.11224,-4.815079 4.57933,0.331394 -1,-3.151105 0.0778,-0.06127 C 111.97751,47.853051 108,42.700358 108,36.87681 Z"
               id="Collar"
               fill="#f2f2f2"
               fill-rule="evenodd" />
          </g>
          <g
             id="Face"
             transform="translate(76,82)"
             fill="#000000">
            <g
               id="Mouth/Default"
               transform="translate(2,52)"
               fill-opacity="0.7">
              <path
                 d="m 40,15 c 0,7.731987 6.268014,14 14,14 v 0 c 7.731986,0 14,-6.268013 14,-14"
                 id="Mouth" />
            </g>
            <g
               id="Nose/Default"
               transform="translate(28,40)"
               fill-opacity="0.16">
              <path
                 d="m 16,8 c 0,4.418278 5.372583,8 12,8 v 0 c 6.627417,0 12,-3.581722 12,-8"
                 id="Nose" />
            </g>
            <g
               id="Eyes/Default-😀"
               transform="translate(0,8)"
               fill-opacity="0.6">
              <circle
                 id="Eye"
                 cx="30"
                 cy="22"
                 r="6" />
              <circle
                 id="circle163"
                 cx="82"
                 cy="22"
                 r="6" />
            </g>
            <g
               id="Eyebrow/Outline/Default"
               fill-opacity="0.6">
              <g
                 id="I-Browse"
                 transform="translate(12,6)">
                <path
                   d="M 3.6302454,11.158577 C 7.545155,5.6498667 18.27792,2.5608372 27.523027,4.8311805 28.595725,5.0946055 29.678867,4.4385601 29.942292,3.3658621 30.205717,2.2931641 29.549671,1.2100224 28.476973,0.94659732 17.740363,-1.6900179 5.3120996,1.8869983 0.36975464,8.8414233 -0.27010963,9.7417829 -0.05893639,10.990381 0.84142326,11.630245 1.7417829,12.27011 2.9903811,12.058936 3.6302454,11.158577 Z"
                   id="Eyebrow"
                   fill-rule="nonzero" />
                <path
                   d="M 61.630245,11.158577 C 65.545155,5.6498667 76.27792,2.5608372 85.523027,4.8311805 86.595725,5.0946055 87.678866,4.4385601 87.942292,3.3658621 88.205717,2.2931641 87.549671,1.2100224 86.476973,0.94659732 75.740363,-1.6900179 63.3121,1.8869983 58.369755,8.8414233 c -0.639865,0.9003596 -0.428691,2.1489577 0.471668,2.7888217 0.90036,0.639865 2.148958,0.428691 2.788822,-0.471668 z"
                   id="path167"
                   fill-rule="nonzero"
                   transform="matrix(-1,0,0,1,146.00031,0)" />
              </g>
            </g>
          </g>
          <g
             id="Top"
             stroke-width="1"
             fill-rule="evenodd">
            <defs
               id="defs175">
              <rect
                 id="react-path-27"
                 x="0"
                 y="0"
                 width="264"
                 height="280" />
              <path
                 d="M 8.4613029,88.693536 C 8.16088,89.74389 8,90.853157 8,92 v 13 c 0,6.01863 4.430871,11.00236 10.208581,11.86719 C 19.951807,137.11479 32.469218,154.28298 50,162.61095 V 181 h -4 v 0 C 30.381023,181 15.923632,185.97334 4.1250367,194.42282 1.4527292,186.77662 0,178.55796 0,170 V 74 74 C 0,33.130929 33.130929,0 74,0 v 0 0 c 40.86907,0 74,33.130929 74,74 v 96 c 0,8.55796 -1.45273,16.77662 -4.12504,24.42282 C 132.07637,185.97334 117.61898,181 102,181 v 0 h -4 v -18.38905 c 17.53078,-8.32797 30.04819,-25.49616 31.79142,-45.74376 C 135.56913,116.00236 140,111.01863 140,105 V 92 c 0,-1.689244 -0.34904,-3.296965 -0.97894,-4.754975 C 126.06476,85.056885 111.4787,79.76863 97.14893,71.495334 85.017178,64.491064 74.646468,56.257942 66.669508,47.752196 70.096339,55.660432 74.245934,62.588041 79.118291,68.535022 66.443111,63.012085 57.812635,54.132439 53.226862,41.896084 52.849027,42.818023 52.455505,43.738913 52.046195,44.658238 42.206947,66.757551 25.591131,82.681997 8.4613029,88.693536 Z"
                 id="react-path-28" />
              <path
                 d="m 65.180219,77.737299 c 2.182966,-1.632766 15.226292,-2.258648 17.57761,-3.64785 0.733817,-0.434063 1.303243,-0.87373 1.741949,-1.309442 0.439036,0.435712 1.008792,0.875379 1.742609,1.309442 2.350988,1.389202 15.394313,2.015084 17.577283,3.64785 2.21036,1.653529 3.8239,5.447384 3.6473,8.413651 -0.21193,3.559191 -4.10548,12.051943 -13.794643,13.030152 -2.114634,-2.352909 -5.435462,-3.870649 -9.172549,-3.870649 -3.736426,0 -7.057584,1.51774 -9.172219,3.870649 C 65.638731,98.202893 61.745176,89.710141 61.53325,86.15095 c -0.176605,-2.966267 1.436935,-6.760122 3.646969,-8.413651 m 37.961421,17.169082 c 0.001,-6.59e-4 0.003,-0.0013 0.004,-0.0016 -0.002,3.3e-4 -0.003,9.89e-4 -0.004,0.0016 m -37.296265,-0.0049 c 0.004,0.0016 0.01122,0.0043 0.0165,0.0063 -0.0053,-0.002 -0.01089,-0.0043 -0.0165,-0.0063 M 144.86259,55.985334 c -0.3882,-5.954946 -1.58482,-11.833428 -2.6286,-17.699056 C 141.95274,36.707235 140.42371,26 139.73478,26 c -0.23239,9.109406 -1.03289,18.080386 -2.06512,27.139365 -0.30864,2.708202 -0.63181,5.417063 -0.8444,8.134822 -0.17165,2.195368 0.13435,4.847869 -0.39744,6.971387 -0.67869,2.706883 -4.07973,5.232824 -6.72484,6.165221 -6.60007,2.326542 -12.10518,-7.303026 -17.742,-10.119661 C 104.64327,60.634715 92.063739,59.763989 84.581643,64.529792 76.936147,59.763989 64.356614,60.634715 57.038909,64.291134 51.402415,67.107769 45.896971,76.737337 39.297238,74.410795 36.65213,73.478398 33.250427,70.952457 32.572397,68.245574 32.040272,66.122056 32.346277,63.469555 32.174954,61.274187 31.962368,58.556428 31.638868,55.847567 31.330223,53.139365 30.298323,44.080386 29.497495,35.109406 29.265433,26 28.57618,26 27.046817,36.707235 26.7659,38.286278 c -1.043783,5.865628 -2.240073,11.74411 -2.628274,17.699056 -0.399093,6.119408 0.07724,12.182128 1.331963,18.177942 0.599135,2.864426 1.298952,5.712371 2.049274,8.540872 0.833838,3.142595 -0.319869,9.262004 0.05348,12.487984 0.706419,6.103588 3.581939,18.007548 6.810999,23.258828 1.560722,2.53814 3.390149,4.12278 5.433151,6.16819 1.966089,1.96894 2.787383,5.0209 4.909609,7.11772 3.955945,3.90822 9.719529,6.23443 15.639581,6.80626 5.31167,4.50708 14.139922,7.45687 24.134095,7.45687 9.994833,0 18.822752,-2.94979 24.134762,-7.45687 5.91939,-0.57183 11.6833,-2.89804 15.63958,-6.80626 2.1219,-2.09682 2.94319,-5.14878 4.90961,-7.11772 2.04267,-2.04541 3.8721,-3.63005 5.43315,-6.16819 3.22873,-5.25128 6.10458,-17.15524 6.81067,-23.258828 0.37334,-3.22598 -0.78037,-9.345389 0.0538,-12.487984 0.75033,-2.828501 1.44981,-5.676446 2.04928,-8.540872 1.25406,-5.995814 1.73072,-12.058534 1.33196,-18.177942 z"
                 id="react-path-29" />
            </defs>
            <mask
               id="react-mask-25"
               fill="#ffffff">
              <use
                 xlink:href="#react-path-27"
                 id="use177"
                 x="0"
                 y="0"
                 width="100%"
                 height="100%" />
            </mask>
            <g
               id="g180" />
            <g
               id="Top/Long-Hair/Straight-+-Strand"
               mask="url(#react-mask-25)">
              <g
                 transform="translate(-1)"
                 id="g209">
                <g
                   id="Hair"
                   stroke-width="1"
                   fill="none"
                   fill-rule="evenodd"
                   transform="translate(59,18)">
                  <mask
                     id="react-mask-26"
                     fill="#ffffff">
                    <use
                       xlink:href="#react-path-28"
                       id="use182"
                       x="0"
                       y="0"
                       width="100%"
                       height="100%" />
                  </mask>
                  <use
                     fill="#ecc797"
                     xlink:href="#react-path-28"
                     id="use185"
                     x="0"
                     y="0"
                     width="100%"
                     height="100%" />
                  <g
                     id="g191"
                     mask="url(#react-mask-26)"
                     fill="#4a312c">
                    <g
                       id="g189">
                      <rect
                         x="0"
                         y="0"
                         width="264"
                         height="280"
                         id="rect187" />
                    </g>
                  </g>
                </g>
                <path
                   d="m 59,102.41895 v 6.41896 c 19.945374,-3.08741 40.589562,-20.447653 52.04619,-46.179672 0.40932,-0.919325 0.80284,-1.840215 1.18067,-2.762154 4.0048,10.686129 11.09438,18.812196 21.26872,24.378202 1.46092,2.195438 3.00182,4.28235 4.62271,6.260736 -12.67518,-5.522937 -21.30565,-14.402583 -25.89143,-26.638938 -0.37783,0.921939 -0.77135,1.842829 -1.18067,2.762154 C 99.589562,92.390257 78.945374,109.7505 59,112.83791 Z m 148,-1.27856 v 9.14039 c -14.95308,-0.86806 -33.09874,-6.53613 -50.85107,-16.785446 -10.2727,-5.930946 -19.28273,-12.742986 -26.64594,-19.855561 -1.36507,-2.510823 -2.6429,-5.140015 -3.83348,-7.887577 7.97696,8.505746 18.34767,16.738868 30.47942,23.743138 C 173.90126,99.744646 192.04692,105.41272 207,106.28078 Z"
                   id="Shadow"
                   fill-opacity="0.16"
                   fill="#000000"
                   fill-rule="evenodd" />
                <g
                   id="Top/_Resources/Round"
                   fill="none"
                   transform="translate(62,85)">
                  <defs
                     id="defs201">
                    <path
                       d="M 80.464619,16.394118 C 84.380151,8.4586968 92.552602,3 102,3 110.91969,3 118.70289,7.8659108 122.83992,15.088064 123.0502,15.03065 123.27152,15 123.5,15 h 8 c 1.38071,0 2.5,1.119288 2.5,2.5 0,1.380712 -1.11929,2.5 -2.5,2.5 h -6.53687 C 125.63736,22.214592 126,24.564946 126,27 126,40.254834 115.25483,51 102,51 88.745166,51 78,40.254834 78,27 78,25.578107 78.123651,24.185094 78.360787,22.831127 78.276246,18.455303 74.913596,15 70.862417,15 67.12567,15 63.974719,17.939753 63.441763,21.830063 63.80733,23.495192 64,25.225096 64,27 64,40.254834 53.254834,51 40,51 26.745166,51 16,40.254834 16,27 c 0,-2.435054 0.362645,-4.785408 1.036874,-7 H 10.5 C 9.1192881,20 8,18.880712 8,17.5 8,16.119288 9.1192881,15 10.5,15 v 0 h 8 c 0.228481,0 0.449803,0.03065 0.660079,0.08806 C 23.297113,7.8659108 31.080309,3 40,3 49.352157,3 57.454943,8.349191 61.415666,16.15488 63.492921,13.039272 66.949443,11 70.862417,11 c 4.012265,0 7.54462,2.144078 9.602202,5.394118 z M 40,47 C 51.045695,47 60,38.045695 60,27 60,15.954305 51.045695,7 40,7 28.954305,7 20,15.954305 20,27 c 0,11.045695 8.954305,20 20,20 z m 62,0 c 11.04569,0 20,-8.954305 20,-20 0,-11.045695 -8.95431,-20 -20,-20 -11.045695,0 -20,8.954305 -20,20 0,11.045695 8.954305,20 20,20 z"
                       id="react-path-41" />
                    <filter
                       x="0"
                       y="0"
                       width="1"
                       height="1.0416667"
                       filterUnits="objectBoundingBox"
                       id="react-filter-42">
                      <feOffset
                         dx="0"
                         dy="2"
                         in="SourceAlpha"
                         result="shadowOffsetOuter1"
                         id="feOffset196" />
                      <feColorMatrix
                         values="0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.1 0"
                         type="matrix"
                         in="shadowOffsetOuter1"
                         id="feColorMatrix198" />
                    </filter>
                  </defs>
                  <g
                     id="Lennon-Glasses">
                    <use
                       fill="#000000"
                       fill-opacity="1"
                       filter="url(#react-filter-42)"
                       xlink:href="#react-path-41"
                       id="use203"
                       x="0"
                       y="0"
                       width="100%"
                       height="100%" />
                    <use
                       fill="#252c2f"
                       fill-rule="evenodd"
                       xlink:href="#react-path-41"
                       id="use205"
                       x="0"
                       y="0"
                       width="100%"
                       height="100%" />
                  </g>
                </g>
              </g>
            </g>
          </g>
        </g>
      </g>
    </g>
  </g>
  <ellipse
     style="fill:#f5cac3;fill-opacity:1;stroke:#f28482;stroke-opacity:1"
     id="path3701"
     cx="31.151434"
     cy="243.92264"
     rx="27.494719"
     ry="24.258455" />
  <ellipse
     style="fill:#f5cac3;fill-opacity:1;stroke:#f28482;stroke-opacity:1"
     id="path3701-8"
     cx="199.46529"
     cy="245.61798"
     rx="27.494719"
     ry="24.258455" />
  <path
     style="fill:#f7ede2;fill-opacity:1;stroke:#f28482"
     id="path415"
     d="m 3.6956439,204.62631 c 0.198964,1.1269 0.235633,2.29488 0.59689,3.38069 2.396924,7.20426 5.460399,12.43627 10.1097381,18.81408 7.806295,10.70841 16.377311,19.81512 26.582668,28.34206 5.612302,4.68928 11.774141,8.67863 17.661212,13.01795 6.022883,3.40418 11.858342,7.16366 18.068649,10.21254 8.974964,4.40615 18.891254,8.06854 28.825189,9.73125 3.01896,0.50531 10.27475,1.04375 13.60445,-0.93065 0.95263,-0.56487 1.15716,-1.88873 1.73574,-2.83309 -2.71911,-4.66717 -0.82238,-3.11431 -5.40419,-4.9875 -0.18717,-0.0839 -2.16515,4.32761 -1.97798,4.41153 v 0 c 2.84367,0.42479 1.7885,0.93231 3.37006,-0.99061 1.42918,-0.91311 0.49115,-0.13954 -1.29063,-0.44719 -2.28237,-0.39407 -4.57118,-0.81843 -6.78411,-1.50212 -15.289055,-4.72362 -29.375097,-12.53769 -42.917157,-20.91447 -5.702002,-4.02212 -11.592697,-7.78924 -17.106005,-12.06635 -10.81144,-8.38729 -18.254899,-15.54446 -27.414672,-25.46497 -5.489931,-5.94588 -8.397748,-9.37406 -12.3795451,-15.68649 -0.45878,-0.72731 -0.772594,-1.53653 -1.158892,-2.3048 -0.0093,-0.17486 -4.13067,0.0433 -4.121415,0.21814 z" />
  <path
     style="fill:#f7ede2;fill-opacity:1;stroke:#f28482"
     id="path417"
     d="m 4.2121699,206.8506 c 0.620907,0.50374 1.219561,1.03622 1.862719,1.51123 3.506924,2.59003 8.1026721,5.5969 11.6076751,7.78448 3.648074,2.27688 7.324731,4.50884 11.033305,6.68578 8.769111,5.1475 20.371843,11.5653 29.159892,16.4764 4.492115,2.50088 24.015703,13.33269 29.001894,16.24665 3.63536,2.12452 7.25612,4.27951 10.78316,6.57939 3.828155,2.49623 8.565855,5.72239 11.667995,9.34481 0.71828,0.83874 1.11774,1.90481 1.67661,2.85721 -0.0196,0.53013 0.11531,1.08926 -0.0587,1.5904 -0.23314,0.67145 -1.378,1.22607 -1.88782,1.5355 -0.14005,0.13184 2.96732,3.43271 3.10736,3.30087 v 0 c 0.68158,-0.59821 1.49917,-1.07024 2.04474,-1.79465 2.01374,-2.67377 1.50285,-3.33481 1.61016,-6.62634 -0.57993,-1.49042 -0.92661,-3.09416 -1.7398,-4.47125 -2.75407,-4.66389 -7.15744,-8.70258 -11.28274,-12.01074 -3.374615,-2.70617 -6.907645,-5.21736 -10.510255,-7.61164 -10.486086,-6.96901 -17.792426,-10.73481 -28.918282,-16.93411 -5.22198,-2.71571 -10.414209,-5.48941 -15.665939,-8.14713 -8.452029,-4.27729 -17.496159,-8.56852 -26.104432,-12.60574 -1.927706,-0.90408 -9.76748,-4.53593 -12.7225271,-5.85542 -0.629301,-0.281 -1.268554,-0.53915 -1.902832,-0.80873 -0.125286,-0.11719 -2.887469,2.83584 -2.762183,2.95303 z" />
  <path
     style="fill:#f5cac3;fill-opacity:1;stroke:#f28482"
     id="path419"
     d="m 9.8740069,214.14391 c 7.0837431,4.88083 14.4472311,9.34216 21.7283601,13.91809 9.783744,6.14873 10.597887,6.69577 20.674729,13.13143 10.571074,6.80878 21.349973,13.28354 32.143529,19.73032 2.91678,1.74214 9.9119,5.85739 13.18984,7.97014 1.09207,0.70388 2.13508,1.4811 3.202625,2.22166 2.22579,1.91595 0.92187,1.15384 0.91905,0.16906 -0.001,-0.4346 0.41515,-0.85908 0.28231,-1.27289 -0.0716,-0.22289 -0.46768,-0.022 -0.70152,-0.033 -0.17353,0.0442 0.86843,4.13444 1.04196,4.09024 v 0 c 1.52071,-0.2723 2.52308,-0.20459 3.44073,-2.06495 0.85535,-1.73405 -0.49645,-3.24324 -1.24482,-4.54438 -1.00021,-1.03827 -1.92762,-2.15196 -3.00063,-3.11481 -3.640595,-3.26686 -8.521895,-6.70368 -12.443645,-9.40304 -10.367326,-7.1359 -21.097523,-13.72382 -31.859517,-20.24111 -3.748249,-2.21926 -7.474555,-4.47601 -11.244749,-6.65779 -6.773151,-3.91956 -12.105803,-6.85679 -18.973477,-10.40921 -3.708545,-1.91831 -7.977434,-4.0287 -11.85114,-5.76046 -0.913021,-0.40817 -1.848022,-0.76529 -2.772034,-1.14793 -0.145039,-0.1074 -2.6766401,3.3112 -2.5316011,3.41861 z" />
  <path
     style="fill:#f7ede2;fill-opacity:1;stroke:#f28482"
     id="path421"
     d="m 16.77308,221.30673 c 0.508021,0.52743 0.975693,1.09694 1.524065,1.58228 3.731813,3.30287 7.084846,5.66525 11.303803,8.59921 3.278457,2.27991 6.589575,4.51331 9.925394,6.70844 8.937804,5.88151 14.617431,9.33389 23.743504,15.01315 9.598685,5.90164 19.352384,11.54439 29.148529,17.10986 3.50682,1.99233 7.01491,3.98993 10.552835,5.92724 0.93493,-0.0242 0.006,0.0697 0.22387,-2.12222 0.0145,-0.14651 0.37238,-0.42262 0.23298,-0.37524 -0.80163,0.27244 -1.01824,1.17449 -1.34037,1.81802 -0.0389,0.16417 3.83073,1.08015 3.86959,0.91597 v 0 c -0.16167,0.22872 -0.30681,0.47009 -0.48503,0.68617 -0.0487,0.0591 -0.2526,0.17317 -0.18882,0.13081 0.32812,-0.21792 0.82379,-0.29672 0.98186,-0.6575 0.92482,-2.11085 0.5912,-2.20266 -0.16789,-3.68711 -0.48418,-0.52142 -0.93211,-1.079 -1.45253,-1.56425 -2.32231,-2.16537 -5.565255,-4.65004 -8.008995,-6.43317 -9.08455,-6.62877 -18.614177,-12.61738 -28.133364,-18.59252 -10.121616,-6.13424 -14.002646,-8.57912 -24.209515,-14.40361 -3.489065,-1.99101 -7.005351,-3.9344 -10.533057,-5.85612 -11.46902,-6.24777 -3.965556,-2.02025 -12.324822,-6.49364 -0.543134,-0.29066 -1.069538,-0.61155 -1.604307,-0.91732 -0.110799,-0.12973 -3.168529,2.48182 -3.05773,2.61155 z" />
  <path
     style="fill:#f5cac3;fill-opacity:1;stroke:#f28482"
     id="path423"
     d="m 27.518953,232.06742 c 0.618019,0.59464 1.202034,1.22677 1.854057,1.7839 3.191914,2.72742 6.965719,5.48195 10.347415,7.8504 5.756767,4.03188 10.755246,7.26848 16.76705,10.97245 2.93391,1.80764 5.913014,3.54087 8.869521,5.3113 2.724909,1.55807 5.441627,3.13055 8.174728,4.6742 2.319719,1.31017 4.659816,2.58398 6.983483,3.88714 1.835273,1.02926 3.658848,2.07927 5.493258,3.11008 1.75789,0.98782 5.30078,2.98679 7.29285,3.95875 0.79628,0.38851 1.62141,0.71485 2.43212,1.07228 0.67146,0.2182 1.33943,0.44748 2.0144,0.65462 1.57483,0.4833 1.83415,0.46466 3.372495,1.04052 1.20392,0.45066 2.4272,1.04405 3.58947,1.5801 0.16779,0.0992 2.50711,-3.85564 2.33932,-3.95489 v 0 c -1.09917,-0.47331 -2.89475,-1.26819 -4.03639,-1.67659 -3.028745,-1.08346 -0.54815,-0.0595 -3.262175,-1.001 -0.49404,-0.17138 -0.97329,-0.38271 -1.45993,-0.57407 -0.6569,-0.38115 -1.33285,-0.73121 -1.97069,-1.14346 -1.2045,-0.77849 -5.8992,-4.15314 -6.65006,-4.67609 -1.74615,-1.21613 -3.4858,-2.44264 -5.26347,-3.61223 -4.479998,-2.94754 -10.165871,-6.39177 -14.67198,-9.16402 -10.861452,-6.56354 -6.769969,-4.12342 -17.758454,-10.63298 -7.042494,-4.17196 -14.060109,-8.4155 -21.3833,-12.08561 -0.111378,-0.13041 -3.185096,2.4948 -3.073718,2.6252 z" />
  <path
     style="fill:#f7ede2;fill-opacity:1;stroke:#f28482"
     id="path425"
     d="m 57.083815,255.71319 c 1.030477,0.67713 2.039955,1.38734 3.09143,2.03137 10.173816,6.2315 20.974723,11.37223 31.96264,15.9908 2.68561,1.12884 5.40896,2.16572 8.113435,3.24858 3.62575,1.42434 7.30988,2.69396 10.94681,4.08856 0.84787,0.32512 1.68577,0.67569 2.52653,1.01878 0.15217,0.0621 0.4284,0.35939 0.45213,0.19675 0.12952,-0.88754 -0.0589,-1.79291 -0.0884,-2.68937 -0.14818,0.0934 2.05413,3.58608 2.20231,3.49264 v 0 c 0.43284,-1.12009 1.24852,-2.16051 1.29853,-3.36029 0.0493,-1.18195 -3.27699,-3.16178 -3.56969,-3.3389 -3.29796,-1.99568 -6.94914,-3.60754 -10.40429,-5.25927 -2.61688,-1.19979 -5.223715,-2.42174 -7.850635,-3.59937 -2.82195,-1.26506 -15.516375,-6.80679 -18.322486,-8.01563 -4.711413,-2.02963 -9.677337,-4.14929 -14.470189,-6.04936 -1.180912,-0.46816 -2.377767,-0.89506 -3.56665,-1.34258 -0.152196,-0.0985 -2.473681,3.4888 -2.321485,3.58729 z" />
  <path
     style="fill:#84a59d;stroke:#f28482"
     id="path433"
     d="m 117.09457,282.86559 c -0.12335,-0.42179 -0.20302,-0.85889 -0.37004,-1.26537 -0.44979,-1.09463 -0.90134,-2.19447 -1.47659,-3.22869 -0.90456,-1.62631 -1.85933,-3.23237 -2.95411,-4.73721 -3.40114,-4.67505 -7.74006,-9.08112 -11.6117,-13.28806 -0.20023,-0.23128 -5.651545,4.48817 -5.451315,4.71945 v 0 c 2.47558,2.20466 5.014835,4.33982 7.426725,6.61398 3.70594,3.49432 7.14082,7.32529 10.0389,11.52143 0.28169,0.40785 0.51025,0.84996 0.76537,1.27494 0.0683,0.15412 3.70109,-1.45634 3.63276,-1.61047 z" />
  <use
     x="0"
     y="0"
     xlink:href="#path415"
     id="use515"
     transform="matrix(-1.0339199,0,0,1,228.61647,0)"
     width="100%"
     height="100%" />
  <use
     x="0"
     y="0"
     xlink:href="#path417"
     id="use517"
     transform="matrix(-1.0339199,0,0,1,228.61647,0)"
     width="100%"
     height="100%" />
  <use
     x="0"
     y="0"
     xlink:href="#path419"
     id="use519"
     transform="matrix(-1.0339199,0,0,1,228.61647,0)"
     width="100%"
     height="100%" />
  <use
     x="0"
     y="0"
     xlink:href="#path421"
     id="use521"
     transform="matrix(-1.0339199,0,0,1,228.34021,-1.49851)"
     width="100%"
     height="100%" />
  <use
     x="0"
     y="0"
     xlink:href="#path423"
     id="use523"
     transform="matrix(-1.0339199,0,0,1,228.61647,0)"
     width="100%"
     height="100%" />
  <use
     x="0"
     y="0"
     xlink:href="#path425"
     id="use525"
     transform="matrix(-1.0339199,0,0,1,228.61647,0)"
     width="100%"
     height="100%" />
  <use
     x="0"
     y="0"
     xlink:href="#path433"
     id="use527"
     transform="matrix(-1.0339199,0,0,1,228.61647,0)"
     width="100%"
     height="100%" />
  <ellipse
     style="fill:#f7ede2;fill-opacity:1;stroke:#f28482;stroke-opacity:1"
     id="path551"
     cx="114.62935"
     cy="265.26492"
     rx="37.611938"
     ry="35.652985" />
  <ellipse
     style="fill:url(#radialGradient3310);fill-opacity:1;stroke:url(#meshgradient5917);stroke-width:2.44192;stroke-opacity:1"
     id="path3278"
     cx="114.14177"
     cy="264.73135"
     rx="59.614864"
     ry="56.622326" />
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
